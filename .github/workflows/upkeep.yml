name: upkeep

on:
  schedule:
    - cron: "0 0,12 * * *"
  push:
    branches: [main]

jobs:
  vscode:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Checkout nixpkgs-upkeep
        uses: actions/checkout@v2
        with:
          path: nixpkgs-upkeep

      - name: Checkout nixpkgs
        uses: actions/checkout@v2
        with:
          repository: NixOS/nixpkgs
          path: nixpkgs
          token: ${{ secrets.GH_TOKEN }}

      - name: Check current package version
        working-directory: ./nixpkgs
        run: |
          PACKAGE="vscode"
          CURRENT_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      # See https://github.com/NixOS/nixpkgs/pull/100461.
      - name: Run custom update-script
        working-directory: ./nixpkgs
        run: |
          ./pkgs/applications/editors/vscode/update-vscode.sh

      - working-directory: ./nixpkgs
        run: git diff

      # It doesn't seem possible to get the URL of the current running job, only the current RUN_ID. See https://github.community/t/github-actions-url-to-run/16029/14.
      - name: Create PR
        working-directory: ./nixpkgs
        run: |
          GH_TOKEN=$GH_TOKEN \
            PACKAGE=$PACKAGE \
            CURRENT_VERSION=$CURRENT_VERSION \
            TESTED_OTHER_LINUX="false" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  vscodium:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Checkout nixpkgs-upkeep
        uses: actions/checkout@v2
        with:
          path: nixpkgs-upkeep

      - name: Checkout nixpkgs
        uses: actions/checkout@v2
        with:
          repository: NixOS/nixpkgs
          path: nixpkgs
          token: ${{ secrets.GH_TOKEN }}

      - name: Check current package version
        working-directory: ./nixpkgs
        run: |
          PACKAGE="vscodium"
          CURRENT_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Run custom update-script
        run: |
          ./nixpkgs/pkgs/applications/editors/vscode/update-vscodium.sh

      - working-directory: ./nixpkgs
        run: git diff

      - name: Create PR
        working-directory: ./nixpkgs
        run: |
          GH_TOKEN=$GH_TOKEN \
            PACKAGE=$PACKAGE \
            CURRENT_VERSION=$CURRENT_VERSION \
            TESTED_OTHER_LINUX="false" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  spotify:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Checkout nixpkgs-upkeep
        uses: actions/checkout@v2
        with:
          path: nixpkgs-upkeep

      - name: Checkout nixpkgs
        uses: actions/checkout@v2
        with:
          repository: NixOS/nixpkgs
          path: nixpkgs
          token: ${{ secrets.GH_TOKEN }}

      # Spotify is unfree, so we need to ok that in our Nix config.
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix

      - name: Check current package version
        working-directory: ./nixpkgs
        run: |
          PACKAGE="spotify-unwrapped"
          CURRENT_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Run custom update-script
        working-directory: ./nixpkgs
        # The spotify update script creates a commit at the end, which conflicts
        # with create-pr.sh. See https://stackoverflow.com/questions/15772134/can-i-delete-a-git-commit-but-keep-the-changes.
        run: |
          git config --global user.email "foo@bar.com"
          git config --global user.name "upkeep-bot"
          before_commit=$(git rev-parse HEAD)
          ./pkgs/applications/audio/spotify/update.sh
          after_commit=$(git rev-parse HEAD)
          if [ $before_commit != $after_commit ]; then
            git reset "HEAD^"
          fi

      - working-directory: ./nixpkgs
        run: git diff

      - name: Create PR
        working-directory: ./nixpkgs
        # Note that the update script builds the derivation.
        run: |
          GH_TOKEN=$GH_TOKEN \
            PACKAGE=$PACKAGE \
            CURRENT_VERSION=$CURRENT_VERSION \
            TESTED_OTHER_LINUX="true" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  plexamp:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Checkout nixpkgs-upkeep
        uses: actions/checkout@v2
        with:
          path: nixpkgs-upkeep

      - name: Checkout nixpkgs
        uses: actions/checkout@v2
        with:
          repository: NixOS/nixpkgs
          path: nixpkgs
          token: ${{ secrets.GH_TOKEN }}

      # Plexamp is unfree, so we need to ok that in our Nix config.
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix

      - name: Check current package version
        working-directory: ./nixpkgs
        run: |
          PACKAGE="plexamp"
          CURRENT_VERSION="$(nix-instantiate --eval -E 'with import ./. {}; lib.getVersion plexamp' --json | jq -r)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Run custom update-script
        run: |
          ./nixpkgs/pkgs/applications/audio/plexamp/update-plexamp.sh

      - working-directory: ./nixpkgs
        run: git diff

      - name: Create PR
        working-directory: ./nixpkgs
        run: |
          GH_TOKEN=$GH_TOKEN \
            PACKAGE=$PACKAGE \
            CURRENT_VERSION=$CURRENT_VERSION \
            TESTED_OTHER_LINUX="false" \
            GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            ./../nixpkgs-upkeep/create-pr.sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  # julia:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: cachix/install-nix-action@v12
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable

  #     - name: Checkout nixpkgs-upkeep
  #       uses: actions/checkout@v2
  #       with:
  #         path: nixpkgs-upkeep

  #     - name: Checkout nixpkgs
  #       uses: actions/checkout@v2
  #       with:
  #         repository: NixOS/nixpkgs
  #         path: nixpkgs
  #         token: ${{ secrets.GH_TOKEN }}

  #     - name: Check current package version
  #       working-directory: ./nixpkgs
  #       run: |
  #         PACKAGE="julia_15"
  #         CURRENT_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
  #         echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
  #         echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

  #     - name: Run custom update-script
  #       run: |
  #         cp nixpkgs-upkeep/update-julia-1.5.py nixpkgs/pkgs/development/compilers/julia/update-julia-1.5.py
  #         ./nixpkgs/pkgs/development/compilers/julia/update-julia-1.5.py
  #         rm nixpkgs/pkgs/development/compilers/julia/update-julia-1.5.py

  #     - working-directory: ./nixpkgs
  #       run: git diff

  #     - name: Create PR
  #       working-directory: ./nixpkgs
  #       run: |
  #         GH_TOKEN=$GH_TOKEN \
  #           PACKAGE=$PACKAGE \
  #           CURRENT_VERSION=$CURRENT_VERSION \
  #           TESTED_OTHER_LINUX="false" \
  #           GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
  #           ./../nixpkgs-upkeep/create-pr.sh
  #       env:
  #         GH_TOKEN: ${{ secrets.GH_TOKEN }}
  symfony-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Checkout nixpkgs-upkeep
        uses: actions/checkout@v2
        with:
          path: nixpkgs-upkeep

      - name: Checkout nixpkgs
        uses: actions/checkout@v2
        with:
          repository: NixOS/nixpkgs
          path: nixpkgs
          token: ${{ secrets.GH_TOKEN }}

      # Plexamp is unfree, so we need to ok that in our Nix config.
      - run: |
          mkdir -p ~/.config/nixpkgs/
          echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix

      - name: Check current package version
        working-directory: ./nixpkgs
        run: |
          PACKAGE="symfony-cli"
          CURRENT_VERSION="$(nix eval --raw -f . $PACKAGE.version)"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Run custom update-script
        run: |
          ./nixpkgs/pkgs/development/tools/symfony-cli/update-symfony-cli.sh

      - working-directory: ./nixpkgs
        run: git diff

      - name: Create PR
        working-directory: ./nixpkgs
        run: |
          GH_TOKEN=$GH_TOKEN \
          PACKAGE=$PACKAGE \
          CURRENT_VERSION=$CURRENT_VERSION \
          TESTED_OTHER_LINUX="false" \
          GITHUB_WORKFLOW_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
          ./../nixpkgs-upkeep/create-pr.sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
